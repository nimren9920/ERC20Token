{
	"id": "26817aa62a07f5f1ce0330c7b42d0f4e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"nimren.sol": {
				"content": "pragma solidity >=0.7.0 < 0.9.0;\r\n\r\ncontract Nimren{}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"nimren.sol": {
				"Nimren": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nimren.sol\":36:53  contract Nimren{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nimren.sol\":36:53  contract Nimren{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc00f3c9f9b0f454a03877077b5dbf1962d5917f4ce9b878da4ba8f19f96d8c564736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220fc00f3c9f9b0f454a03877077b5dbf1962d5917f4ce9b878da4ba8f19f96d8c564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC STOP RETURN 0xC9 0xF9 0xB0 DELEGATECALL SLOAD LOG0 CODESIZE PUSH24 0x77B5DBF1962D5917F4CE9B878DA4BA8F19F96D8C564736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "36:17:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220fc00f3c9f9b0f454a03877077b5dbf1962d5917f4ce9b878da4ba8f19f96d8c564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC STOP RETURN 0xC9 0xF9 0xB0 DELEGATECALL SLOAD LOG0 CODESIZE PUSH24 0x77B5DBF1962D5917F4CE9B878DA4BA8F19F96D8C564736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "36:17:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 36,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36,
									"end": 53,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 53,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 53,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 53,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 36,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 53,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc00f3c9f9b0f454a03877077b5dbf1962d5917f4ce9b878da4ba8f19f96d8c564736f6c634300080f0033",
									".code": [
										{
											"begin": 36,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36,
											"end": 53,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36,
											"end": 53,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36,
											"end": 53,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"nimren.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nimren.sol\":\"Nimren\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nimren.sol\":{\"keccak256\":\"0xa53d5371373db31cae79c5801705093d6b3c4a2b633c1b1793d253e449b2430c\",\"urls\":[\"bzz-raw://a2978fbd06a13d451adf05414686e3c9f6dc466eefb9367f85ecde7a54d1af56\",\"dweb:/ipfs/QmcfuWqP5JnQJru8hJGfMnVZ1ApHJ85Cx3dU6NHJNn49BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> nimren.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "nimren.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"nimren.sol": {
				"ast": {
					"absolutePath": "nimren.sol",
					"exportedSymbols": {
						"Nimren": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Nimren",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Nimren",
							"nameLocation": "45:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "36:17:0",
							"usedErrors": []
						}
					],
					"src": "0:55:0"
				},
				"id": 0
			}
		}
	}
}